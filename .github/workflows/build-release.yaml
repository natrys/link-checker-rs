name: build and release binary with rust nightly toolchain

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: static building
        run: |
          docker run --rm -t \
          -v $HOME/.cargo/registry/:/root/.cargo/registry \
          -v "$(pwd)":/volume \
          clux/muslrust:nightly cargo build --release

      - name: strip
        run: |
          sudo strip target/x86_64-unknown-linux-musl/release/link-checker-rs

      - name: Get version
        id: get_version
        run: echo ::set-output name=version::$(date -u +"%Y%m%d%H%M%S")

      - name: Create Release
        id: create_release
        if: success()
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        if: success()
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/x86_64-unknown-linux-musl/release/link-checker-rs
          asset_name: link-checker-x86_64-linux-static
          asset_content_type: application/x-elf
